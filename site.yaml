---
  - hosts: all
    gather_facts: yes
    become: yes
    tasks:
      - name: server update
        apt:
          update_cache: yes
          state: latest

  - hosts: HAproxy
    become: yes
    remote_user: ubuntu
    tasks:
      - name: Install HAProxy
        apt:
           name: haproxy
           state: latest

      - name: Configure HAProxy
        template:
           src: haproxy.cfg.j2
           dest: /etc/haproxy/haproxy.cfg.j2

      - name: Restart HAproxy
        become: yes
        shell: systemctl restart haproxy

  - hosts: webservers
    remote_user: ubuntu
    become: yes
    tasks:

      - name: install python3
        apt:
          name: python3
          state: latest

      - name: install python3-pip
        apt:
          name: python3-pip
          state: latest

      - name: create a new directory
        file:
           path: /home/ubuntu/flask-app
           state: directory
           owner: ubuntu
           group: ubuntu

      - name: change directory to flask-app
        shell: cd /home/ubuntu/flask-app

      - name: Install Flask in virtual environment
        pip:
          name: flask
          state: present

      - name: create virtual environment
        shell: python3.8 -m venv /home/ubuntu/flask-app/venv

      - name: create virtual environment directory
        file:
           path: /home/ubuntu/flask-app/venv
           state: directory
           owner: ubuntu
           group: ubuntu

      - name: activate virtual environment
        become: yes
        become_user: ubuntu
        shell: . /home/ubuntu/flask-app/venv/bin/activate
        args:
           chdir: /home/ubuntu/flask-app

      - name: copy the flask app code to the servers
        copy:
           src:  app.py
           dest: /home/ubuntu/flask-app/venv/app.py
           mode: 0775

      - name: execute the flask-app deployment
        shell: flask run -h 0.0.0.0 -p 5000
        async: 500
        poll: 0
      
  - hosts: HAproxy
    become: yes
    tasks:
      - name: test HAproxy 1
        uri:
          url: "http://localhost/"
          return_content:  yes
        register: html_content
      - debug:
            msg: "{{ html_content.content }}"

      - name: test HAproxy 2
        uri:
          url: "http://localhost/"
          return_content:  yes
        register: html_content
      - debug:
            msg: "{{ html_content.content }}"

      - name: test HAproxy 3
        uri:
          url: "http://localhost/"
          return_content:  yes
        register: html_content
      - debug:
            msg: "{{ html_content.content }}"  
